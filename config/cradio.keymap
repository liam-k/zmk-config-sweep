/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keymap_german.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp ESC>;
        };

        combo_up {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp UP>;
        };

        page_up {
            timeout-ms = <50>;
            key-positions = <6 7 8>;
            bindings = <&kp PAGE_UP>;
        };

        combo_down {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp DOWN>;

        };

        page_down {
            timeout-ms = <50>;
            key-positions = <26 27 28>;
            bindings = <&kp PAGE_DOWN>;
        };

        combo_left {
	        timeout-ms = <50>;
	        key-positions = <16 17>;
	        bindings = <&kp LEFT>;
	    };

        combo_right {
	        timeout-ms = <50>;
	        key-positions = <17 18>;
	        bindings = <&kp RIGHT>;
	    };

        combo_enter {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp RET>;
        };

        combo_bt_sys {
            timeout-ms = <200>;
            key-positions = <31 32>;
            bindings = <&mo 3>;
        };

        combo_backspace {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BACKSPACE>;
        };

        combo_backspace_hr {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp BACKSPACE>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };

        combo_undo {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp LG(DE_Z)>;
        };

        combo_redo {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp LG(LS(DE_Z))>;
        };

        combo_del {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp DEL>;
        };

};

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hs: homerow_shifts {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hsl: homerow_shifts_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&to>;
        };

        hthl: homerow_tap_hold_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_TAP_HOLD_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&to>, <&to>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        blt: layertap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERTAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&to>, <&kp>;
        };

        mo_to: behavior_mo_to {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&to>;
        };


        sk: sticky_key {
            release-after-ms = <500>;  // release after 0.5s
            quick-release;             // no double capitalization when rolling keys
        };

    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp K    &kp DE_DOT          &kp O        &kp U  &kp DE_UDIA             &kp V  &kp G       &kp H       	&kp L                &hm DE_SS DE_Z
&blt 1 C &hm LEFT_CONTROL A  &hm LALT E   &hm LGUI I   &kp DE_Y        &kp B  &hm RGUI T  &hm RALT R  &hm RIGHT_CONTROL N  &kp F
&kp X  &kp Q               &kp DE_ADIA   &kp DE_COMM  &kp DE_ODIA      	 &kp P  &kp D       &kp W       &kp M                &kp J
                                          &blt 2 SPACE    &sk LEFT_SHIFT   	 &mo_to 1 1 &blt 2 S
            >;
        };

        symbol_layer {
            bindings = <
&kp ESCAPE          &hm DE_BSLH DE_UNDS          	&kp DE_LBKT       &kp DE_RBKT       &kp DE_CARET         &kp DE_EXCL      &kp MAC_LABK      &kp MAC_RABK      &kp DE_EQL        &kp DE_AMPS
&kp TAB             &hm LEFT_CONTROL DE_FSLH		&hm LALT DE_LBRC  &hm LGUI DE_RBRC  &kp DE_STAR  		 &kp DE_QUES  	  &hm RGUI DE_LPAR  &hm RALT DE_RPAR  &hm RIGHT_CONTROL DE_MINS  &hm DE_AT DE_COLN
&kp DE_HASH  		&hm DE_DLR DE_EURO    			 &kp MAC_PIPE       &kp DE_TILD       &kp DE_GRV      	 &kp DE_PLUS 	  &kp DE_PERC       &kp DE_DQT        &kp DE_SQT        &kp DE_SEMI
                                                          			 &to 0             &kp BACKSPACE    	 &to 2      		 &to 0
            >;
        };

        num_nav_layer {

            bindings = <
&kp LG(LA(LEFT))  	&kp LA(LG(DOWN)) 		&hm LA(UP) UP	    	&kp LA(LG(UP))     &kp LA(LG(RIGHT)) 	     	 		  				 &hm HOME PAGE_UP  	&td DE_LPAR N7      &kp N8    		&td DE_RPAR N9     		 &kp BACKSPACE
&hm C_PREV C_VOL_DN  &hm LA(LEFT) LEFT 	  &hm LA(DOWN) DOWN      &hm LA(RIGHT) RIGHT     &hm C_NEXT C_VOL_UP    							&hm END PAGE_DOWN   &hm RGUI N4  		&hm RALT N5  	&hm RIGHT_CONTROL N6     &kp DE_EQL
&kp LA(LS(LEFT))   	&kp LS(LEFT)    &hm C_PP LA(LG(SPACE)) 	&kp LS(RIGHT) 	    &kp LA(LS(RIGHT))        		      						&td DE_STAR DE_PLUS	&td DE_DOT N1  		&td N0 N2   	&td DE_COMM N3  		 &td DE_FSLH DE_MINS
												 													&to 0 &hm F6 C_VOICE_COMMAND   	&to 0   &kp N0
            >;
        };

        bt_sys {
            bindings = <
&kp C_BRIGHTNESS_DEC   &kp C_BRIGHTNESS_INC   	&trans 		&trans			&sys_reset      &sys_reset   &trans  &trans  &kp C_VOL_DN  &kp C_VOL_UP
&trans  			&bt BT_DISC 0 		&bt BT_DISC 1   &bt BT_DISC 2  		&bootloader     &bootloader  &trans  &trans  &trans  &kp C_MUTE
&bt BT_CLR      	&bt BT_SEL 0     	&bt BT_SEL 1	&bt BT_SEL 2  			&to 0        &to 1   &trans  &trans  &trans  &trans
                                    									 &to 0   &trans       &trans  &to 1
            >;
        };
    };
};
