/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keymap_german.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

{
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp ESC>;
        };

        combo_up {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <kp UP>;
   	        layers = <0 1>;
        };

        combo_down {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp DOWN>;
   	        layers = <0 1>;

        };

        combo_left {
	        timeout-ms = <50>;
	        key-positions = <16 17>;
	        bindings = <&kp LEFT>;
   	        layers = <0 1>;
	    };

        combo_right {
	        timeout-ms = <50>;
	        key-positions = <17 18>;
	        bindings = <&kp RIGHT>;
   	        layers = <0 1>;
	    };

        combo_enter {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp RET>;
        };

        combo_1 {
            timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&to 1>;
        };

        combo_backspace {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BACKSPACE>;
            layers = <0 1 2 3>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp TAB>;
        };

        combo_sqt {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp DE_SQT>;
            layers = <0>;
        };

        combo_dqt {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp DE_DQT>;
            layers = <1>;
        };

        combo_del {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp DEL>;
        };

};

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hs: homerow_shifts {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hsl: homerow_shifts_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&to>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        blt: layertap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERTAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&to>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp K    &kp DE_DOT          &kp O        &kp DE_COMM  &kp DE_Y             &kp V  &kp G       &kp C       &kp L                &hm DE_SS DE_Z
&lt 1 H  &hm LEFT_CONTROL A  &hm LALT E   &hm LGUI I   &kp U             &kp D  &hm RGUI T  &hm RALT R  &hm RIGHT_CONTROL N  &kp F
&lt 3 X  &kp Q               &kp DE_ADIA  &kp DE_UDIA  &kp DE_ODIA       &kp B  &kp P       &kp W       &kp M                &kp J
                                          &kp SPACE    &sk LEFT_SHIFT    &to 1  &kp S
            >;
        };

        symbol_layer {
            bindings = <
&kp ESCAPE          &kp DE_UNDS          				   &kp DE_LBRC       &kp DE_RBRC       &kp CARET         &kp DE_EXCL  &kp MAC_LABK      &kp MAC_RABK      &kp DE_EQL        &kp BACKSPACE
&kp TAB             &hm LEFT_CONTROL DE_BSLH		       &hm LALT DE_LBKT  &hm LGUI DE_RBRC  &kp DE_STAR  &kp DE_QUES  	  &hm RGUI DE_LPAR  &hm RALT DE_RPAR  &hm RIGHT_CONTROL DE_MINS  &hm DE_AT DE_COLN
&hm LSHIFT DE_HASH  &hm DE_DLR DE_EURO   &kp DE_PIPE       &kp DE_TILD       &kp DE_GRV        &kp DE_AMPS  &kp DE_PERC       &kp DE_DQT        &kp DE_SQT        &kp DE_SEMI
                                                           &to 0             &kp BACKSPACE     &to 2        &kp DE_PLUS
            >;
        };

        num_layer {
            bindings = <
&trans   &kp C_PP   &kp C_PREV         &kp C_NEXT         &trans            &trans  &kp N7         &kp N8  &kp N9      &trans
&kp TAB  &trans     &hm LALT C_VOL_DN  &hm LGUI C_VOL_UP  &trans            &trans  &hm RGUI N4    &kp N5  &kp N6      &kp EQUAL
&to 0    &kp PRCNT  &kp SLASH          &kp DE_STAR        &to 0             &trans  &kp N1         &kp N2  &td DOT N3  &kp MINUS
                                       &to 0              &sk LEFT_SHIFT    &to 3   &kp BACKSPACE
            >;
        };

        nav_layer {
            bindings = <
&kp ESCAPE    &kp BACKSPACE   &kp UP_ARROW    &kp C_VOICE_COMMAND  &kp F6     &kp LG(LA(LEFT))  &kp LA(LG(DOWN))  &kp LA(LG(UP))  	&kp LA(LG(RIGHT))  	&kp BACKSPACE
&kp TAB  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW      &mkp LCLK       &kp LEFT      	&kp DOWN        	&kp UP         	 &kp RIGHT         	&kp ENTER
&to 0    &mkp RCLK       &mkp MCLK       &kp ENTER            &to 0           &kp LG(LS(TAB))   &kp LA(LS(TAB))    &kp LA(TAB)     	&kp LG(TAB)        	&td END PG_UP
                                         &to 0                &sk LEFT_ALT    &to 4             &td HOME PG_DN
            >;
        };

        bt_sys {
            bindings = <
&sys_reset   &bt BT_PRV   &bt BT_NXT  &bt BT_CLR  &mkp RCLK    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans      &trans      &trans  &kp B        &trans  &trans  &trans  &trans  &bootloader
&trans      &trans      &trans	     &trans  &to 0        &to 1   &trans  &trans  &trans  &trans
                                     &to 0   &trans       &trans  &to 1
            >;
        };
    };
};
