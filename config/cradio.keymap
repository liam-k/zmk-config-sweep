/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keymap_german.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp ESC>;
        };

        combo_up {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp UP>;
   	        layers = <0 1>;
        };

        combo_down {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp DOWN>;
   	        layers = <0 1>;

        };

        combo_left {
	        timeout-ms = <50>;
	        key-positions = <16 17>;
	        bindings = <&kp LEFT>;
   	        layers = <0 1>;
	    };

        combo_right {
	        timeout-ms = <50>;
	        key-positions = <17 18>;
	        bindings = <&kp RIGHT>;
   	        layers = <0 1>;
	    };

        combo_enter {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp RET>;
        };

        combo_bt_sys {
            timeout-ms = <200>;
            key-positions = <31 32>;
            bindings = <&mo 3>;
        };

        combo_backspace {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BACKSPACE>;
            layers = <0 1 2 3>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp TAB>;
        };

        combo_sqt {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp DE_SQT>;
            layers = <0>;
        };

        combo_dqt {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp DE_DQT>;
            layers = <1>;
        };

        combo_del {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp DEL>;
        };

};

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hs: homerow_shifts {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hsl: homerow_shifts_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&to>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        blt: layertap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERTAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&to>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp K    &kp DE_DOT          &kp O        &kp DE_COMM  &kp DE_Y             &kp V  &kp G       &kp C       &kp L                &hm DE_SS DE_Z
&lt 1 H  &hm LEFT_CONTROL A  &hm LALT E   &hm LGUI I   &kp U             	&kp D  &hm RGUI T  &hm RALT R  &hm RIGHT_CONTROL N  &kp F
&lt 2 X  &kp Q               &kp DE_ADIA  &kp DE_UDIA  &kp DE_ODIA      	 &kp B  &kp P       &kp W       &kp M                &kp J
                                          &lt 2 SPACE    &sk LEFT_SHIFT   	 &to 1  &lt 2 S
            >;
        };

        symbol_layer {
            bindings = <
&kp ESCAPE          &kp DE_UNDS          				   &kp DE_LBKT       &kp DE_RBKT       &kp DE_CARET         &kp DE_EXCL      &kp MAC_LABK      &kp MAC_RABK      &kp DE_EQL        &kp DE_AMPS
&kp TAB             &hm LEFT_CONTROL DE_BSLH		       &hm LALT DE_LBRC  &hm LGUI DE_RBRC  &kp DE_STAR  	 &kp DE_QUES  	  &hm RGUI DE_LPAR  &hm RALT DE_RPAR  &hm RIGHT_CONTROL DE_MINS  &hm DE_AT DE_COLN
&kp DE_HASH  		&hm DE_DLR DE_EURO  	  			 &kp MAC_PIPE       &kp DE_TILD       &kp DE_GRV        &kp DE_PLUS 	  &kp DE_PERC       &kp DE_DQT        &kp DE_SQT        &kp DE_SEMI
                                                           &to 0             &kp BACKSPACE     &to 2       		 &to 0
            >;
        };
â‰ 
        num_nav_layer {
            bindings = <
&kp LG(LA(LEFT))  	&kp LA(LG(DOWN)) 	 				&kp UP_ARROW	    	&kp LA(LG(UP))      	&kp LA(LG(RIGHT)) 	     	 			 &hm HOME PAGE_UP   &kp N7         &kp N8  &kp N9      &kp BACKSPACE
&hm C_PREV C_VOL_DN  &hm LEFT_CONTROL LEFT_ARROW 	  &hm LALT DOWN_ARROW      &hm LGUI RIGHT_ARROW     &hm C_NEXT C_VOL_UP    					&hm END PAGE_DOWN   &hm RGUI N4    &hm RALT N5  &hm RIGHT_CONTROL N6      &kp EQUAL
&kp LG(LS(TAB))   	&kp LA(LS(TAB))    &hm C_PP LA(LG(SPACE)) 	&kp LA(TAB) 	    &kp LG(TAB)        		      	&kp PLUS 	 				&kp N1         &hm N0 N2  &td DOT N3  &kp MINUS
												 															&to 0 &hm F6 C_VOICE_COMMAND   		&to 0   &kp N0
            >;
        };

        bt_sys {
            bindings = <
&kp C_BRIGHTNESS_DEC   &kp C_BRIGHTNESS_INC   	&trans 		&trans			&sys_reset      &sys_reset   &trans  &trans  &kp C_VOL_DN  &kp C_VOL_UP
&trans  			&trans      			&trans      &trans  		&bootloader     &bootloader  &trans  &trans  &trans  &kp C_MUTE
&bt BT_CLR      	&bt BT_SEL 0     	&bt BT_SEL 1	&bt BT_SEL 2  			&to 0        &to 1   &trans  &trans  &trans  &trans
                                    									 &to 0   &trans       &trans  &to 1
            >;
        };
    };
};
